generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String  @id @default(uuid())
  first_name    String
  last_name     String
  email         String
  clerk_id      String  @unique
  profile_image String?
  subscribed    Boolean @default(false)
}

model Exercise {
  id           String   @id
  name         String?
  force        String?
  level        String?
  mechanic     String?
  equipment    String?
  category     String?
  instructions String[]
  images       String[]

  primaryMuscles   Muscle[] @relation("PrimaryMuscles")
  secondaryMuscles Muscle[] @relation("SecondaryMuscles")

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Workout   Workout[]
}

model Muscle {
  name         String     @id
  primaryFor   Exercise[] @relation("PrimaryMuscles")
  secondaryFor Exercise[] @relation("SecondaryMuscles")
}

model Workout {
  id            String       @id @default(uuid())
  exercise      Exercise     @relation(fields: [exerciseId], references: [id])
  exerciseId    String
  weight        Int
  reps          Int
  WorkoutPlan   WorkoutPlan? @relation(fields: [workoutPlanId], references: [id])
  workoutPlanId String?
  duration Int
}

model WeeklyGoal {
  id          String        @id @default(uuid())
  WorkoutPlan WorkoutPlan[]
  totalWorkouts Int
}

model WorkoutPlanSetting {
  id                   String        @id @default(uuid())
  repGoal              Int
  timeGoal             Int
  weightGoal           Int
  totalWorkoutsPerWeek Int
  WorkoutPlan          WorkoutPlan[]
}

model WorkoutPlan {
  id                   String             @id @default(uuid())
  workouts             Workout[]

  workoutPlanSettings  WorkoutPlanSetting @relation(fields: [workoutPlanSettingId], references: [id])
  workoutPlanSettingId String

  weeklyGoals          WeeklyGoal         @relation(fields: [weeklyGoalId], references: [id])
  weeklyGoalId         String
}

model WorkoutSummary{
  id                   String             @id @default(uuid())
}


/*
        totalMonthWorkouts: 25,
        previousMonthWorkouts: 22,
        checkInCount: 7,
        longestStreak: 14,
        workoutStas: {
            targetDuration: 60,
            durationsPerWorkout: [
                40, 20, 60, 30, 70, 50, 20
            ]
        },
        lastThreeWorkouts: [
            {
                title: "Upper Body",
                date: "Today",
                duration: 45,
                exercises: 4
            },
            {
                title: "Cardio",
                date: "Yesterday",
                duration: 30,
                exercises: 2
            },
            {
                title: "Lower Body",
                date: "2 days ago",
                duration: 50,
                exercises: 5
            },
        ]

*/